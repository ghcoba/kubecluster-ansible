---
    
- name: ROLE kube tasks main sub install-flannel tasks - create flannel download dir
  file: 
    path: "{{ flannel_download_dir }}"
    state: directory
  delegate_to: "{{ groups['kube-nodes'][0] }}"
  run_once: true
  
- name: check whether flannel downloaded on the first node
  stat: 
    path: "{{ flannel_download_dir }}/{{ flannel_release }}.tar.gz"
  register: flannel_downloaded_check
  delegate_to: "{{ groups['kube-nodes'][0] }}"
  run_once: true

- debug:
    msg: " flannel_downloaded_check: {{ flannel_downloaded_check }}"
  delegate_to: "{{ groups['kube-nodes'][0] }}"
  run_once: true
  
- name: download flannel on the first node
  get_url:
    url: "{{ flannel_download_url }}"
    dest: "{{ flannel_download_dir }}"
    validate_certs: no
    timeout: 30
  register: download_flannel
  delegate_to: "{{ groups['kube-nodes'][0] }}"
  run_once: true
  when: 
    - not flannel_downloaded_check.stat.exists

- name: check whether flannel tar extracted on the first node
  stat: 
    path: "{{ flannel_download_dir }}/flanneld"
  register: flannel_release_tar_check
  delegate_to: "{{ groups['kube-nodes'][0] }}"
  run_once: true
  
- name: extract flannel tar file
  unarchive:
    src: "{{ flannel_download_dir }}/{{ flannel_release }}.tar.gz"
    dest: "{{ flannel_download_dir }}"
    remote_src: yes
  run_once: true
  delegate_to: "{{ groups['kube-nodes'][0] }}"
  when: 
    - not flannel_release_tar_check.stat.exists

- name: fetch flannel package from the first node
  fetch:
    src: "{{ flannel_download_dir }}/{{ flannel_release }}.tar.gz"
    dest: "{{ ansible_tmp_flannel_package_local_dir }}/{{ flannel_release }}.tar.gz"
    flat: yes
  run_once: true
  delegate_to: "{{ groups['kube-nodes'][0] }}"

- name: fetch flannel binary from the first node
  fetch:
    src: "{{ flannel_download_dir }}/{{ item }}"
    dest: "{{ ansible_tmp_flannel_bin_local_dir }}/{{ item }}"
    flat: yes
  run_once: true
  delegate_to: "{{ groups['kube-nodes'][0] }}"
  with_items:
    - flanneld
    - mk-docker-opts.sh
    - README.md

- name: remove flannel download dir
  file:
    path: "{{ flannel_download_dir }}"
    state: absent
  delegate_to: "{{ groups['kube-nodes'][0] }}"
  run_once: true
  
#- name: create flannel bin and conf dir
#  file: 
#    path: "{{ item }}"
#    state: directory
#    owner: root
#    group: root
#    mode: 0751
#    recurse: yes
#  with_items:
#    - "{{ flannel_config_dir }}"
#    - "{{ flannel_bin_dir }}"
#  when: inventory_hostname in groups['cluster']

# copy flannel binary to all cluster node (include kube-masters, kube-nodes)
- name: copy flannel binary to kube-masters and kube-nodes
  copy:
    src: "{{ ansible_tmp_flannel_bin_local_dir }}/{{ item }}"
    dest: "{{ flannel_bin_dir }}"
    owner: "{{ flannel_user }}"
    group: "{{ flannel_group }}"
    mode: 0751
  with_items:
    - flanneld
    - mk-docker-opts.sh
  when: inventory_hostname in groups['kube-nodes'] or inventory_hostname in groups['kube-masters']
