---

# file: roles/kube/tasks/gen-kubelet-config.yml
# generate kubelet config file (set cluster, credential, context, and default context)
# copy to ansible backup
# copy to kub home dire

# generate kubelet config file for every master node
- name: generate kublet config - set cluster
#  command: >
#    "{{ kube_bin_dir }}"/kubectl config set-cluster kubernetes
#      --certificate-authority="{{ kube_ca_file }}" 
#      --embed-certs=true 
#      --server="{{ kube_kubelet_apiserver_url }}"
#      --kubeconfig=kubelet.conf
  command: "/usr/local/bin/kubectl {{ arg_str_kubelet_cluster }}"
  args:
    chdir: "{{ kube_conf_dir }}/"
  when: inventory_hostname in groups['kube-nodes']

- debug:
    msg: "arg_str_kubelet_cre.. {{ arg_str_kubelet_credentials_1 }}"
  when: inventory_hostname in groups['kube-nodes']

- debug:
    msg: "arg_str_kubelet_cre.. {{ arg_str_kubelet_credentials_3 }}"
  when: inventory_hostname in groups['kube-nodes']

# get hostname of current node
- name: get hostname
  command: hostname
  register: hostname_current
  when: inventory_hostname in groups['kube-nodes']

- name: generate kubelet config - set credential
#  command: >
#    "{{ kube_bin_dir }}"/kubectl config set-credentials system:node:nodex 
#      --client-certificate="{{ kube_kubelet_cert_file }}"
#      --embed-certs=true 
#      --client-key="{{ kube_kubelet_key_file }}" 
#      --kubeconfig=kubelet.conf
  command: "/usr/local/bin/kubectl  {{ arg_str_kubelet_credentials_1 }}  system:node:{{ hostname_current['stdout'] }} {{ arg_str_kubelet_credentials_3 }}"
  args:
    chdir: "{{ kube_conf_dir }}/"
  when: inventory_hostname in groups['kube-nodes']

- name: generate kubelet config - set context
#  command: >
#    "{{ kube_bin_dir }}"/kubectl config set-context system:node:nodex@kubernetes
#      --cluster=kubernetes
#      --user=system:node:nodex
#      --kubeconfig=kubelet.conf
  command: "/usr/local/bin/kubectl {{ arg_str_kubelet_context_1 }} system:node:{{ hostname_current['stdout'] }}@kubernetes {{ arg_str_kubelet_context_3 }} --user=system:node:{{ hostname_current['stdout'] }} {{ arg_str_kubelet_context_5 }} "
  args:
    chdir: "{{ kube_conf_dir }}/"
  when: inventory_hostname in groups['kube-nodes']

- name: generate kubelet config - set default context
#  command: >
#    "{{ kube_bin_dir }}"/kubectl config use-context system:node:nodex@kubernetes
#      --kubeconfig=kubelet.conf
  command: "/usr/local/bin/kubectl  {{ arg_str_kubelet_defaultcontext_1 }}  system:node:{{ hostname_current['stdout'] }}@kubernetes  {{ arg_str_kubelet_defaultcontext_3 }}"
  args:
    chdir: "{{ kube_conf_dir }}/"
  when: inventory_hostname in groups['kube-nodes']

