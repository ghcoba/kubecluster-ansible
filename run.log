
PLAY [cluster] ***********************************************************************************

TASK [Gathering Facts] ***************************************************************************
ok: [node3]
ok: [node1]
ok: [node2]
ok: [node4]
ok: [node5]
ok: [node6]

TASK [common : create ansible temp directory] ****************************************************
ok: [node3]
ok: [node2]
ok: [node4]
ok: [node5]
ok: [node1]
ok: [node6]

TASK [kube : STARTING create-etcd-user TASK.  create system etcd group] **************************
skipping: [node4]
skipping: [node5]
skipping: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kube : create system etcd user] ************************************************************
skipping: [node4]
skipping: [node5]
skipping: [node6]
ok: [node3]
ok: [node1]
ok: [node2]

TASK [kube : ensure etcd_data_dir exists] ********************************************************
skipping: [node4]
skipping: [node5]
skipping: [node6]
changed: [node1]
changed: [node3]
changed: [node2]

TASK [kube : STARTING install-etcd-bin TASK.   check whether etcd release tar downloaded on the first etcd server] ***
ok: [node1 -> node1]

TASK [kube : download etcd release tar file on first the etcd server] ****************************
skipping: [node1]

TASK [kube : check whether etcd release tar extracted on the first etcd server] ******************
ok: [node1 -> node1]

TASK [kube : extract etcd tar file] **************************************************************
skipping: [node1]

TASK [kube : fetch etcd bins from the first etcd server] *****************************************
ok: [node1 -> node1] => (item=etcd)
ok: [node1 -> node1] => (item=etcdctl)

TASK [kube : copy etcd binary] *******************************************************************
skipping: [node4] => (item=etcd) 
skipping: [node4] => (item=etcdctl) 
skipping: [node5] => (item=etcd) 
skipping: [node5] => (item=etcdctl) 
skipping: [node6] => (item=etcd) 
skipping: [node6] => (item=etcdctl) 
ok: [node2] => (item=etcd)
ok: [node3] => (item=etcd)
ok: [node1] => (item=etcd)
ok: [node3] => (item=etcdctl)
ok: [node2] => (item=etcdctl)
ok: [node1] => (item=etcdctl)

TASK [kube : STARTING gen-master-ca-certs TASK. remove tmp master ca config directory on first node of masters if exist] ***
changed: [node1 -> node1]

TASK [kube : create master ca config directory on first master node] *****************************
changed: [node1 -> node1]

TASK [kube : copy make-master-ca-cert.sh] ********************************************************
changed: [node1 -> node1]

TASK [kube : gen master ca certs on the first master server] *************************************
changed: [node1 -> node1]

TASK [kube : check master ca cert config dir exist] **********************************************
ok: [node1 -> node1]

TASK [kube : fetch master ca cert files from the first etcd server to ansible tmp directory] *****
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
ok: [node1 -> node1] => (item=ca-config.json)
ok: [node1 -> node1] => (item=ca-csr.json)
changed: [node1 -> node1] => (item=ca.csr)
ok: [node1 -> node1] => (item=cfssl)
ok: [node1 -> node1] => (item=cfssljson)

TASK [kube : STARTING gen-etcd-certs TASK. remove tmp etcd certs config directory on first node of masters if exist] ***
changed: [node1 -> node1]

TASK [kube : create and ensure tmp etcd certs config directory on first node of masters] *********
changed: [node1 -> node1]

TASK [kube : create and ensure etcd certs directory on all etcd nodes of etcd cluster] ***********
skipping: [node4]
skipping: [node5]
skipping: [node6]
changed: [node1]
changed: [node2]
changed: [node3]

TASK [kube : copy make-etcd-ca-cert.sh to first node of masters] *********************************
changed: [node1 -> node1]

TASK [kube : gen certs on the first master server node - include certs of etcd-server etcd-client and etcd-peer] ***
changed: [node1 -> node1]

TASK [kube : fetch backuped etcd cert files from the first master server node to ansible tmp directory] ***
changed: [node1 -> node1] => (item=etcd-ca.pem)
changed: [node1 -> node1] => (item=etcd-ca-key.pem)
ok: [node1 -> node1] => (item=etcd-ca-config.json)
ok: [node1 -> node1] => (item=etcd-ca-csr.json)
changed: [node1 -> node1] => (item=etcd-ca.csr)
changed: [node1 -> node1] => (item=etcd-server.pem)
changed: [node1 -> node1] => (item=etcd-server-key.pem)
ok: [node1 -> node1] => (item=etcd-server.json)
changed: [node1 -> node1] => (item=etcd-server.csr)
changed: [node1 -> node1] => (item=etcd-peer.pem)
changed: [node1 -> node1] => (item=etcd-peer-key.pem)
ok: [node1 -> node1] => (item=etcd-peer.json)
changed: [node1 -> node1] => (item=etcd-peer.csr)
changed: [node1 -> node1] => (item=etcd-client.pem)
changed: [node1 -> node1] => (item=etcd-client-key.pem)
ok: [node1 -> node1] => (item=etcd-client.json)
changed: [node1 -> node1] => (item=etcd-client.csr)

TASK [kube : copy ansible tmp backup certs to all etcd server nodes] *****************************
skipping: [node4] => (item=etcd-ca.pem) 
skipping: [node5] => (item=etcd-ca.pem) 
skipping: [node4] => (item=etcd-ca-key.pem) 
skipping: [node4] => (item=etcd-server.pem) 
skipping: [node4] => (item=etcd-server-key.pem) 
skipping: [node4] => (item=etcd-peer.pem) 
skipping: [node4] => (item=etcd-peer-key.pem) 
skipping: [node4] => (item=etcd-client.pem) 
skipping: [node4] => (item=etcd-client-key.pem) 
skipping: [node5] => (item=etcd-ca-key.pem) 
skipping: [node5] => (item=etcd-server.pem) 
skipping: [node5] => (item=etcd-server-key.pem) 
skipping: [node6] => (item=etcd-ca.pem) 
skipping: [node5] => (item=etcd-peer.pem) 
skipping: [node5] => (item=etcd-peer-key.pem) 
skipping: [node5] => (item=etcd-client.pem) 
skipping: [node5] => (item=etcd-client-key.pem) 
skipping: [node6] => (item=etcd-ca-key.pem) 
skipping: [node6] => (item=etcd-server.pem) 
skipping: [node6] => (item=etcd-server-key.pem) 
skipping: [node6] => (item=etcd-peer.pem) 
skipping: [node6] => (item=etcd-peer-key.pem) 
skipping: [node6] => (item=etcd-client.pem) 
skipping: [node6] => (item=etcd-client-key.pem) 
changed: [node1] => (item=etcd-ca.pem)
changed: [node2] => (item=etcd-ca.pem)
changed: [node3] => (item=etcd-ca.pem)
changed: [node3] => (item=etcd-ca-key.pem)
changed: [node2] => (item=etcd-ca-key.pem)
changed: [node1] => (item=etcd-ca-key.pem)
changed: [node3] => (item=etcd-server.pem)
changed: [node1] => (item=etcd-server.pem)
changed: [node2] => (item=etcd-server.pem)
changed: [node1] => (item=etcd-server-key.pem)
changed: [node3] => (item=etcd-server-key.pem)
changed: [node2] => (item=etcd-server-key.pem)
changed: [node2] => (item=etcd-peer.pem)
changed: [node1] => (item=etcd-peer.pem)
changed: [node3] => (item=etcd-peer.pem)
changed: [node2] => (item=etcd-peer-key.pem)
changed: [node1] => (item=etcd-peer-key.pem)
changed: [node3] => (item=etcd-peer-key.pem)
changed: [node3] => (item=etcd-client.pem)
changed: [node2] => (item=etcd-client.pem)
changed: [node1] => (item=etcd-client.pem)
changed: [node3] => (item=etcd-client-key.pem)
changed: [node2] => (item=etcd-client-key.pem)
changed: [node1] => (item=etcd-client-key.pem)

TASK [kube : ensure etcd certs permmision for all etcd nodes] ************************************
skipping: [node5] => (item=/etc/etcd/ssl/etcd-ca.pem) 
skipping: [node5] => (item=/etc/etcd/ssl/etcd-ca-key.pem) 
skipping: [node5] => (item=/etc/etcd/ssl/etcd-server.pem) 
skipping: [node5] => (item=/etc/etcd/ssl/etcd-server-key.pem) 
skipping: [node4] => (item=/etc/etcd/ssl/etcd-ca.pem) 
skipping: [node5] => (item=/etc/etcd/ssl/etcd-peer.pem) 
skipping: [node5] => (item=/etc/etcd/ssl/etcd-peer-key.pem) 
skipping: [node5] => (item=/etc/etcd/ssl/etcd-client.pem) 
skipping: [node5] => (item=/etc/etcd/ssl/etcd-client-key.pem) 
skipping: [node4] => (item=/etc/etcd/ssl/etcd-ca-key.pem) 
skipping: [node4] => (item=/etc/etcd/ssl/etcd-server.pem) 
skipping: [node4] => (item=/etc/etcd/ssl/etcd-server-key.pem) 
skipping: [node4] => (item=/etc/etcd/ssl/etcd-peer.pem) 
skipping: [node4] => (item=/etc/etcd/ssl/etcd-peer-key.pem) 
skipping: [node4] => (item=/etc/etcd/ssl/etcd-client.pem) 
skipping: [node4] => (item=/etc/etcd/ssl/etcd-client-key.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-ca.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-ca-key.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-server.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-server-key.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-peer.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-peer-key.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-client.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-client-key.pem) 
ok: [node1] => (item=/etc/etcd/ssl/etcd-ca.pem)
ok: [node3] => (item=/etc/etcd/ssl/etcd-ca.pem)
ok: [node2] => (item=/etc/etcd/ssl/etcd-ca.pem)
ok: [node1] => (item=/etc/etcd/ssl/etcd-ca-key.pem)
ok: [node3] => (item=/etc/etcd/ssl/etcd-ca-key.pem)
ok: [node2] => (item=/etc/etcd/ssl/etcd-ca-key.pem)
ok: [node1] => (item=/etc/etcd/ssl/etcd-server.pem)
ok: [node3] => (item=/etc/etcd/ssl/etcd-server.pem)
ok: [node2] => (item=/etc/etcd/ssl/etcd-server.pem)
ok: [node1] => (item=/etc/etcd/ssl/etcd-server-key.pem)
ok: [node3] => (item=/etc/etcd/ssl/etcd-server-key.pem)
ok: [node2] => (item=/etc/etcd/ssl/etcd-server-key.pem)
ok: [node1] => (item=/etc/etcd/ssl/etcd-peer.pem)
ok: [node3] => (item=/etc/etcd/ssl/etcd-peer.pem)
ok: [node2] => (item=/etc/etcd/ssl/etcd-peer.pem)
ok: [node1] => (item=/etc/etcd/ssl/etcd-peer-key.pem)
ok: [node3] => (item=/etc/etcd/ssl/etcd-peer-key.pem)
ok: [node2] => (item=/etc/etcd/ssl/etcd-peer-key.pem)
ok: [node1] => (item=/etc/etcd/ssl/etcd-client.pem)
ok: [node3] => (item=/etc/etcd/ssl/etcd-client.pem)
ok: [node2] => (item=/etc/etcd/ssl/etcd-client.pem)
ok: [node1] => (item=/etc/etcd/ssl/etcd-client-key.pem)
ok: [node3] => (item=/etc/etcd/ssl/etcd-client-key.pem)
ok: [node2] => (item=/etc/etcd/ssl/etcd-client-key.pem)

TASK [kube : STARTING gen-kuber-certs TASK. remove tmp kube certs config directory on first node of masters if exist] ***
changed: [node1 -> node1]

TASK [kube : crate and ensure tmp kube certs config directory on first node of masters] **********
changed: [node1 -> node1]

TASK [kube : ensure kube certs directory] ********************************************************
skipping: [node4]
skipping: [node5]
skipping: [node6]
ok: [node1]
ok: [node2]
ok: [node3]

TASK [kube : copy make-kube-ca-cert.sh to first node of kube masters] ****************************
changed: [node1 -> node1]

TASK [kube : gen certs on the first master server node - certs generate are admin, apiserver, controller-manager, scheduler certs] ***
changed: [node1 -> node1]

TASK [kube : fetch backuped kube cert files from the first master server node to ansible tmp directory] ***
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
ok: [node1 -> node1] => (item=ca-config.json)
ok: [node1 -> node1] => (item=ca-csr.json)
changed: [node1 -> node1] => (item=ca.csr)
changed: [node1 -> node1] => (item=apiserver.pem)
changed: [node1 -> node1] => (item=apiserver-key.pem)
ok: [node1 -> node1] => (item=apiserver.json)
changed: [node1 -> node1] => (item=apiserver.csr)
changed: [node1 -> node1] => (item=admin.pem)
changed: [node1 -> node1] => (item=admin-key.pem)
ok: [node1 -> node1] => (item=admin.json)
changed: [node1 -> node1] => (item=admin.csr)
changed: [node1 -> node1] => (item=controller-manager.pem)
changed: [node1 -> node1] => (item=controller-manager-key.pem)
ok: [node1 -> node1] => (item=controller-manager.json)
changed: [node1 -> node1] => (item=controller-manager.csr)
changed: [node1 -> node1] => (item=scheduler.pem)
changed: [node1 -> node1] => (item=scheduler-key.pem)
ok: [node1 -> node1] => (item=scheduler.json)
changed: [node1 -> node1] => (item=scheduler.csr)

TASK [kube : copy ansible tmp backup certs to all kube master server nodes] **********************
skipping: [node4] => (item=ca.pem) 
skipping: [node4] => (item=ca-key.pem) 
skipping: [node4] => (item=apiserver.pem) 
skipping: [node4] => (item=apiserver-key.pem) 
skipping: [node5] => (item=ca.pem) 
skipping: [node5] => (item=ca-key.pem) 
skipping: [node5] => (item=apiserver.pem) 
skipping: [node5] => (item=apiserver-key.pem) 
skipping: [node5] => (item=admin.pem) 
skipping: [node4] => (item=admin.pem) 
skipping: [node4] => (item=admin-key.pem) 
skipping: [node4] => (item=controller-manager.pem) 
skipping: [node4] => (item=controller-manager-key.pem) 
skipping: [node4] => (item=scheduler.pem) 
skipping: [node5] => (item=admin-key.pem) 
skipping: [node5] => (item=controller-manager.pem) 
skipping: [node5] => (item=controller-manager-key.pem) 
skipping: [node5] => (item=scheduler.pem) 
skipping: [node5] => (item=scheduler-key.pem) 
skipping: [node4] => (item=scheduler-key.pem) 
skipping: [node6] => (item=ca.pem) 
skipping: [node6] => (item=ca-key.pem) 
skipping: [node6] => (item=apiserver.pem) 
skipping: [node6] => (item=apiserver-key.pem) 
skipping: [node6] => (item=admin.pem) 
skipping: [node6] => (item=admin-key.pem) 
skipping: [node6] => (item=controller-manager.pem) 
skipping: [node6] => (item=controller-manager-key.pem) 
skipping: [node6] => (item=scheduler.pem) 
skipping: [node6] => (item=scheduler-key.pem) 
changed: [node2] => (item=ca.pem)
changed: [node1] => (item=ca.pem)
changed: [node3] => (item=ca.pem)
changed: [node1] => (item=ca-key.pem)
changed: [node2] => (item=ca-key.pem)
changed: [node3] => (item=ca-key.pem)
changed: [node2] => (item=apiserver.pem)
changed: [node1] => (item=apiserver.pem)
changed: [node3] => (item=apiserver.pem)
changed: [node2] => (item=apiserver-key.pem)
changed: [node1] => (item=apiserver-key.pem)
changed: [node3] => (item=apiserver-key.pem)
changed: [node1] => (item=admin.pem)
changed: [node2] => (item=admin.pem)
changed: [node3] => (item=admin.pem)
changed: [node1] => (item=admin-key.pem)
changed: [node2] => (item=admin-key.pem)
changed: [node3] => (item=admin-key.pem)
changed: [node1] => (item=controller-manager.pem)
changed: [node2] => (item=controller-manager.pem)
changed: [node3] => (item=controller-manager.pem)
changed: [node1] => (item=controller-manager-key.pem)
changed: [node2] => (item=controller-manager-key.pem)
changed: [node3] => (item=controller-manager-key.pem)
changed: [node1] => (item=scheduler.pem)
changed: [node2] => (item=scheduler.pem)
changed: [node3] => (item=scheduler.pem)
changed: [node1] => (item=scheduler-key.pem)
changed: [node2] => (item=scheduler-key.pem)
changed: [node3] => (item=scheduler-key.pem)

TASK [kube : change and ensure etcd certs permmision of certs of each node of kube masters] ******
skipping: [node4] => (item=/etc/etcd/ssl/etcd-ca.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/ca-key.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/apiserver.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/apiserver-key.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/admin.pem) 
skipping: [node5] => (item=/etc/etcd/ssl/etcd-ca.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/ca-key.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/apiserver.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/apiserver-key.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/admin.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/admin-key.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/controller-manager.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/controller-manager-key.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/scheduler.pem) 
skipping: [node5] => (item=/etc/kubernetes/pki/scheduler-key.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/admin-key.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/controller-manager.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/controller-manager-key.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/scheduler.pem) 
skipping: [node4] => (item=/etc/kubernetes/pki/scheduler-key.pem) 
skipping: [node6] => (item=/etc/etcd/ssl/etcd-ca.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/ca-key.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/apiserver.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/apiserver-key.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/admin.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/admin-key.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/controller-manager.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/controller-manager-key.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/scheduler.pem) 
skipping: [node6] => (item=/etc/kubernetes/pki/scheduler-key.pem) 
changed: [node1] => (item=/etc/etcd/ssl/etcd-ca.pem)
changed: [node3] => (item=/etc/etcd/ssl/etcd-ca.pem)
changed: [node2] => (item=/etc/etcd/ssl/etcd-ca.pem)
ok: [node1] => (item=/etc/kubernetes/pki/ca-key.pem)
ok: [node3] => (item=/etc/kubernetes/pki/ca-key.pem)
ok: [node2] => (item=/etc/kubernetes/pki/ca-key.pem)
ok: [node1] => (item=/etc/kubernetes/pki/apiserver.pem)
ok: [node3] => (item=/etc/kubernetes/pki/apiserver.pem)
ok: [node2] => (item=/etc/kubernetes/pki/apiserver.pem)
ok: [node1] => (item=/etc/kubernetes/pki/apiserver-key.pem)
ok: [node3] => (item=/etc/kubernetes/pki/apiserver-key.pem)
ok: [node2] => (item=/etc/kubernetes/pki/apiserver-key.pem)
ok: [node1] => (item=/etc/kubernetes/pki/admin.pem)
ok: [node3] => (item=/etc/kubernetes/pki/admin.pem)
ok: [node2] => (item=/etc/kubernetes/pki/admin.pem)
ok: [node1] => (item=/etc/kubernetes/pki/admin-key.pem)
ok: [node2] => (item=/etc/kubernetes/pki/admin-key.pem)
ok: [node3] => (item=/etc/kubernetes/pki/admin-key.pem)
ok: [node1] => (item=/etc/kubernetes/pki/controller-manager.pem)
ok: [node3] => (item=/etc/kubernetes/pki/controller-manager.pem)
ok: [node2] => (item=/etc/kubernetes/pki/controller-manager.pem)
ok: [node1] => (item=/etc/kubernetes/pki/controller-manager-key.pem)
ok: [node3] => (item=/etc/kubernetes/pki/controller-manager-key.pem)
ok: [node2] => (item=/etc/kubernetes/pki/controller-manager-key.pem)
ok: [node1] => (item=/etc/kubernetes/pki/scheduler.pem)
ok: [node3] => (item=/etc/kubernetes/pki/scheduler.pem)
ok: [node2] => (item=/etc/kubernetes/pki/scheduler.pem)
ok: [node1] => (item=/etc/kubernetes/pki/scheduler-key.pem)
ok: [node3] => (item=/etc/kubernetes/pki/scheduler-key.pem)
ok: [node2] => (item=/etc/kubernetes/pki/scheduler-key.pem)

TASK [kube : STARTING gen-etcd-systemd TAKS. create etcd systemd unit file] **********************
skipping: [node4]
skipping: [node5]
skipping: [node6]
ok: [node2]
ok: [node3]
ok: [node1]

TASK [kube : TASK gen-etcd-systemd - sub task create etcd ENV. create etcd env conf] *************
skipping: [node4]
skipping: [node5]
skipping: [node6]
ok: [node3]
ok: [node1]
ok: [node2]

TASK [kube : STARTING change-ntp-config TASK. create ntp config for all nodes] *******************
changed: [node1]
ok: [node3]
ok: [node2]
ok: [node5]
ok: [node4]
ok: [node6]

TASK [kube : create specific ntp config for master ntp node] *************************************
changed: [node1 -> node1]

TASK [kube : restart ntpd of all node of cluster] ************************************************
changed: [node1]
changed: [node4]
changed: [node3]
changed: [node2]
changed: [node5]
changed: [node6]

TASK [kube : STARTING change-firewall-config TASK.  change firewalll to enable port 2379 for all etcd cluster nodes] ***
skipping: [node4]
skipping: [node5]
skipping: [node6]
changed: [node2]
changed: [node3]
changed: [node1]

TASK [kube : change firewalll to enable port 2380 for all etcd cluster nodes] ********************
skipping: [node4]
skipping: [node5]
skipping: [node6]
changed: [node1]
changed: [node2]
changed: [node3]

TASK [kube : change firewalll to enable port 4001 for all etcd cluster nodes] ********************
skipping: [node4]
skipping: [node5]
skipping: [node6]
changed: [node1]
changed: [node2]
changed: [node3]

TASK [kube : change firewalll to enable ntp service port for all node of cluster] ****************
changed: [node1]
changed: [node3]
changed: [node2]
changed: [node4]
changed: [node5]
changed: [node6]

TASK [kube : reload firewall to take effect for all cluster nodes] *******************************
changed: [node2]
changed: [node1]
changed: [node4]
changed: [node3]
changed: [node5]
changed: [node6]

TASK [kube : STARTING etcd-start TASK.    start etcd] ********************************************
skipping: [node4]
skipping: [node5]
skipping: [node6]
ok: [node2]
ok: [node1]
ok: [node3]

TASK [kube : STARTING etcd-restart TASK.    restart etcd] ****************************************
skipping: [node4]
skipping: [node5]
skipping: [node6]
changed: [node2]
changed: [node1]
changed: [node3]

PLAY RECAP ***************************************************************************************
node1                      : ok=43   changed=29   unreachable=0    failed=0   
node2                      : ok=23   changed=12   unreachable=0    failed=0   
node3                      : ok=23   changed=12   unreachable=0    failed=0   
node4                      : ok=6    changed=3    unreachable=0    failed=0   
node5                      : ok=6    changed=3    unreachable=0    failed=0   
node6                      : ok=6    changed=3    unreachable=0    failed=0   

